{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-0.70/typescript.md",
  "source_file_content_hash": "8a586c16d46c4f21f57263c5bdf31aac704c4ae33bcb656ff6db2a9995ad560d",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: typescript\ntitle: Using TypeScript\n---",
      "source_content_hash": "44ebe7efdbe0b6bb578e2aee278eb708a611a1f5a2af53248cce7d42bb4a4f8a",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "4d1292be",
      "source_content": "import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; import constants from '@site/core/TabsConstants';",
      "source_content_hash": "0aed60180598135363f970d0b23d8d7665430a4b05f703a572a064dbbca30b07",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_4d1292be"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "[TypeScript][ts] is a language which extends JavaScript by adding type definitions, much like [Flow][flow]. While React Native is built in Flow, it supports both TypeScript _and_ Flow by default.",
      "source_content_hash": "0da5d1af0d6933d67349bb7f3919a1139a07d607ee22bdf8102f6352b2da5d8a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[TypeScript][ts] is a language which extends JavaScript by adding type definitions, much like [Flow][flow]. While React Native is built in Flow, it supports both TypeScript _and_ Flow by default."
      }
    },
    {
      "segment_id": "1cc03ec8",
      "source_content": "## Getting Started with TypeScript",
      "source_content_hash": "fce5c3b10a1069c430fc99344fa2da43414a4533fd55ac4ed18df998b8406533",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 開始使用 TypeScript"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "If you're starting a new project, there are a few different ways to get started.",
      "source_content_hash": "03e01dd1f4fedef7d98934af002aaad40da18d5cf6621be5d85b00574efe50d3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果您要開始一個新專案，有幾種不同的方式可以開始。"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "You can use the [TypeScript template][ts-template]:",
      "source_content_hash": "b51693734e6bb090ef7db7605daf782d802f0ee4c8b17e9cce9bdf011ab1bd43",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以使用 [TypeScript 模板][ts-template]："
      }
    },
    {
      "segment_id": "41ad46a6",
      "source_content": "```shell\nnpx react-native init MyApp --template react-native-template-typescript\n```",
      "source_content_hash": "93455da0595ccab5d5801b3b5478f664c3b84a565fadb074fdafabe3c5540f4b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_41ad46a6"
      }
    },
    {
      "segment_id": "80e6256a",
      "source_content": ":::note\n\nIf the above command is failing, you may have an old version of `react-native` or `react-native-cli` installed globally on your system. To fix the issue try uninstalling the CLI:\n\n- `npm uninstall -g react-native-cli` or `yarn global remove react-native-cli`\n\nand then run the `npx` command again.\nOptionally, you can also use the command given below to get started with your template.\n\n- `npx react-native --ignore-existing init MyApp --template react-native-template-typescript`\n\n:::",
      "source_content_hash": "b16145a6e61bc6d1c64d74dd27a6618cba1a4f3eef4f1023468eac8bdce55d09",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-hant": ":::note\n\n如果上述命令失敗，可能是因為您的系統上安裝了舊版本的 `react-native` 或 `react-native-cli`。要解決此問題，請嘗試解除安裝 CLI：\n\n- `npm uninstall -g react-native-cli` 或 `yarn global remove react-native-cli`\n\n然後再次執行 `npx` 命令。\n或者，您也可以使用以下命令來開始使用您的模板。\n\n- `npx react-native --ignore-existing init MyApp --template react-native-template-typescript`\n\n:::"
      }
    },
    {
      "segment_id": "4daf5cdd",
      "source_content": "You can use [Expo][expo], which maintains TypeScript templates, or will prompt you to automatically install and configure TypeScript when a `.ts` or `.tsx` file is added to your project:",
      "source_content_hash": "1a992536bf1bf794ea31b75c96a1d2f54eedfcad2adcd73cd3b75b5bdf0a8e3f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以使用 [Expo][expo]，它維護了 TypeScript 模板，或者在專案中添加 `.ts` 或 `.tsx` 文件時會提示您自動安裝和配置 TypeScript："
      }
    },
    {
      "segment_id": "74d049c6",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n<TabItem value=\"npm\">\n\n```shell\nnpx create-expo-app --template\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn create expo-app --template\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "18db6916efeb17f92529b9b0162df4c1feed4c33cedda43698126b583544bce1",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_74d049c6"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "Or you could use [Ignite][ignite], which also has a TypeScript template:",
      "source_content_hash": "eac10d33d6fa18a99f42581d5560ea5d2ab96110ec7a4f7d3cc9037f182effc9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "或者您可以使用 [Ignite][ignite]，它也有一個 TypeScript 模板："
      }
    },
    {
      "segment_id": "c7ecf06f",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n<TabItem value=\"npm\">\n\n```shell\nnpm install -g ignite-cli\nignite new MyTSProject\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn global add ignite-cli\nignite new MyTSProject\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "ed1b5399ab851daa51f838d72fc01ea37296230bc44aae8c2157bfc7387d5397",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_c7ecf06f"
      }
    },
    {
      "segment_id": "d422fb13",
      "source_content": "## Adding TypeScript to an Existing Project",
      "source_content_hash": "60ca37a7e27bf416449d204e27d261f58a9fc33134461944c0c485af6e997413",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在現有專案中添加 TypeScript"
      }
    },
    {
      "segment_id": "aa0bd54f",
      "source_content": "1. Add TypeScript and the types for React Native and Jest to your project.",
      "source_content_hash": "05a539b34e3a02ac858ceabd1d39f6da7f78f301c14d006093ef99e2cdd53c20",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "1. 將 TypeScript 以及 React Native 和 Jest 的類型定義添加到您的專案中。"
      }
    },
    {
      "segment_id": "568a7359",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n<TabItem value=\"npm\">\n\n```shell\nnpm install -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer @tsconfig/react-native\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn add -D typescript @types/jest @types/react @types/react-native @types/react-test-renderer @tsconfig/react-native\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "6a28a6de72a6cd2ad652d16bc7a571ecf153fdc1393356f4de797c8b32aafd28",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_568a7359"
      }
    },
    {
      "segment_id": "023197ab",
      "source_content": "2. Add a TypeScript config file. Create a `tsconfig.json` in the root of your project:",
      "source_content_hash": "5661bc661f9c351d49a6ce351b7a9cca7b86e3a535e1697f064dacfe5293867c",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "2. 添加一個 TypeScript 配置文件。在您的專案根目錄中創建一個 `tsconfig.json`："
      }
    },
    {
      "segment_id": "19913a56",
      "source_content": "```json\n{\n  \"extends\": \"@tsconfig/react-native/tsconfig.json\"\n}\n```",
      "source_content_hash": "867a8223193517198f3fae8e6aed30e746044a746c1ec656b5e70f8357e16e7f",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_19913a56"
      }
    },
    {
      "segment_id": "2d15468d",
      "source_content": "3. Create a `jest.config.js` file to configure Jest to use TypeScript",
      "source_content_hash": "cbc1a02906614abcdc1d594ab21f0daa4f98c93ee31d7cfd75aed11a47d00592",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "3. 創建一個 `jest.config.js` 文件來配置 Jest 以使用 TypeScript"
      }
    },
    {
      "segment_id": "1cf51900",
      "source_content": "```js\nmodule.exports = {\n  preset: 'react-native',\n  moduleFileExtensions: [\n    'ts',\n    'tsx',\n    'js',\n    'jsx',\n    'json',\n    'node',\n  ],\n};\n```",
      "source_content_hash": "7baa2ad3413dac36ccae7c9f8e09bb8bf2826945a62e704d7d1d59c24804101a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_1cf51900"
      }
    },
    {
      "segment_id": "2979d081",
      "source_content": "4. Rename a JavaScript file to be `*.tsx`",
      "source_content_hash": "40c23a5977a219446341d0ce047059fe5671fccbf863d0dc248084d9bd229dcb",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "4. 將一個 JavaScript 文件重命名為 `*.tsx`"
      }
    },
    {
      "segment_id": "aaa20101",
      "source_content": "> You should leave the `./index.js` entrypoint file as it is otherwise you may run into an issue when it comes to bundling a production build.",
      "source_content_hash": "56f20500e20cef582b5aed17d7715a44e67e320c9773b6c3a0d8795631c5fcbb",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-hant": "> 您應該保持 `./index.js` 入口文件不變，否則在打包生產版本時可能會遇到問題。"
      }
    },
    {
      "segment_id": "10e4f9ca",
      "source_content": "5. Run `yarn tsc` to type-check your new TypeScript files.",
      "source_content_hash": "53fd95926f9459029f748650801f90cb0b5a48021485be01d1ad45aeea82d7c7",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "5. 運行 `yarn tsc` 來對您的新 TypeScript 文件進行類型檢查。"
      }
    },
    {
      "segment_id": "64d57278",
      "source_content": "## How TypeScript and React Native works",
      "source_content_hash": "f3eae7b5508916d1b7f902b3058979f441a233d582fac8fe65e6ecec2e6eefda",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## TypeScript 和 React Native 的工作原理"
      }
    },
    {
      "segment_id": "5f82a1e9",
      "source_content": "Out of the box, transforming your files to JavaScript works via the same [Babel infrastructure][babel] as a non-TypeScript React Native project. We recommend that you use the TypeScript compiler only for type checking. If you have existing TypeScript code being ported to React Native, there are [one or two caveats][babel-7-caveats] to using Babel instead of TypeScript.",
      "source_content_hash": "41a3794fb639fd2d3df7084eeac1c487e8c9f8ba909b6d2ad5b95f6e746a0db8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "開箱即用，將您的文件轉換為 JavaScript 是通過與非 TypeScript React Native 專案相同的 [Babel 基礎設施][babel] 進行的。我們建議您僅使用 TypeScript 編譯器進行類型檢查。如果您有現有的 TypeScript 代碼要移植到 React Native，使用 Babel 而不是 TypeScript 會有 [一兩個注意事項][babel-7-caveats]。"
      }
    },
    {
      "segment_id": "36d6c3de",
      "source_content": "## What does React Native + TypeScript look like",
      "source_content_hash": "e32e0949bf1804dc30460c05b8f02950155451cdddc91086afd69f4dfac8e501",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## React Native + TypeScript 是什麼樣子"
      }
    },
    {
      "segment_id": "c364340c",
      "source_content": "You can provide an interface for a React Component's [Props](props) and [State](state) via `React.Component<Props, State>` which will provide type-checking and editor auto-completing when working with that component in JSX.",
      "source_content_hash": "ae2561a810f8f86c0501803500a72a54f43324c0991228ba231a8cc1c271cf27",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "You can provide an interface for a React Component's [Props](props) and [State](state) via `React.Component<Props, State>` which will provide type-checking and editor auto-completing when working with that component in JSX."
      }
    },
    {
      "segment_id": "b474abd5",
      "source_content": "```tsx title=\"components/Hello.tsx\"\nimport React from 'react';\nimport {Button, StyleSheet, Text, View} from 'react-native';\n\nexport type Props = {\n  name: string;\n  baseEnthusiasmLevel?: number;\n};\n\nconst Hello: React.FC<Props> = ({\n  name,\n  baseEnthusiasmLevel = 0,\n}) => {\n  const [enthusiasmLevel, setEnthusiasmLevel] = React.useState(\n    baseEnthusiasmLevel,\n  );\n\n  const onIncrement = () =>\n    setEnthusiasmLevel(enthusiasmLevel + 1);\n  const onDecrement = () =>\n    setEnthusiasmLevel(\n      enthusiasmLevel > 0 ? enthusiasmLevel - 1 : 0,\n    );\n\n  const getExclamationMarks = (numChars: number) =>\n    numChars > 0 ? Array(numChars + 1).join('!') : '';\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.greeting}>\n        Hello {name}\n        {getExclamationMarks(enthusiasmLevel)}\n      </Text>\n      <View>\n        <Button\n          title=\"Increase enthusiasm\"\n          accessibilityLabel=\"increment\"\n          onPress={onIncrement}\n          color=\"blue\"\n        />\n        <Button\n          title=\"Decrease enthusiasm\"\n          accessibilityLabel=\"decrement\"\n          onPress={onDecrement}\n          color=\"red\"\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  greeting: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    margin: 16,\n  },\n});\n\nexport default Hello;\n```",
      "source_content_hash": "d3fa0aa98e902cb2d626a8d9d128609fe13728a78c1d3687a5fc6cffbddce253",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_b474abd5"
      }
    },
    {
      "segment_id": "f2c67ca5",
      "source_content": "You can explore the syntax more in the [TypeScript playground][tsplay].",
      "source_content_hash": "59c8308abcf80269aa296f18fd60e501ab6f525214162f3a73f0bf0f5c3cbc82",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以在 [TypeScript 遊樂場][tsplay] 中進一步探索語法。"
      }
    },
    {
      "segment_id": "4d7a4554",
      "source_content": "## Where to Find Useful Advice",
      "source_content_hash": "e3b8d89c1cc64a402ec72b8c855f35780c16ddf3aee41c150beb3016a4d12e93",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 哪裡可以找到有用的建議"
      }
    },
    {
      "segment_id": "d796d443",
      "source_content": "- [TypeScript Handbook][ts-handbook]\n- [React's documentation on TypeScript][react-ts]\n- [React + TypeScript Cheatsheets][cheat] has a good overview on how to use React with TypeScript",
      "source_content_hash": "9d88b8a38a3663fc1000c0f6c2d2d32032ced9d51a5fd8a814ae6db4ff7d93e3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- [TypeScript 手冊][ts-handbook]\n- [React 關於 TypeScript 的文檔][react-ts]\n- [React + TypeScript 速查表][cheat] 提供了關於如何將 React 與 TypeScript 結合使用的良好概述"
      }
    },
    {
      "segment_id": "428f235a",
      "source_content": "## Using Custom Path Aliases with TypeScript",
      "source_content_hash": "04ea4b1545ae0fc8f3aa55f6defd183c84e85e1dbe9a9df9c29a0a777b2062d0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在 TypeScript 中使用自定義路徑別名"
      }
    },
    {
      "segment_id": "dad05c50",
      "source_content": "To use custom path aliases with TypeScript, you need to set the path aliases to work from both Babel and TypeScript. Here's how:",
      "source_content_hash": "c557eba05fb1e4208c43424a7564f0a39b55da268a32e86a8c314cdd652a3f78",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "要在 TypeScript 中使用自定義路徑別名，您需要設置路徑別名以同時適用於 Babel 和 TypeScript。方法如下："
      }
    },
    {
      "segment_id": "9ba29f2e",
      "source_content": "1. Edit your `tsconfig.json` to have your [custom path mappings][path-map]. Set anything in the root of `src` to be available with no preceding path reference, and allow any test file to be accessed by using `tests/File.tsx`:",
      "source_content_hash": "518c5129393530444e8c557ed7800e59e67869d3d64e97f931c546efac44d3a9",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "1. 編輯您的 `tsconfig.json` 以設置 [自定義路徑映射][path-map]。將 `src` 根目錄中的任何內容設置為無需前置路徑引用即可使用，並允許通過 `tests/File.tsx` 訪問任何測試文件："
      }
    },
    {
      "segment_id": "ade38aab",
      "source_content": "```diff {2-7}\n    \"target\": \"esnext\",\n+     \"baseUrl\": \".\",\n+     \"paths\": {\n+       \"*\": [\"src/*\"],\n+       \"tests\": [\"tests/*\"],\n+       \"@components/*\": [\"src/components/*\"],\n+     },\n    }\n```",
      "source_content_hash": "e9a1330b3352124e2dee3286b592614f297774e131bb2dba582a0ed9a3cab640",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_ade38aab"
      }
    },
    {
      "segment_id": "dee201e7",
      "source_content": "2. Add [`babel-plugin-module-resolver`][bpmr] as a development package to your project:",
      "source_content_hash": "7b15181b868c7c57d616c2ddd6cc5e148ac42465e941d217b7ff499137cee019",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "2. 將 [`babel-plugin-module-resolver`][bpmr] 作為開發依賴添加到你的專案中："
      }
    },
    {
      "segment_id": "8cb91678",
      "source_content": "<Tabs groupId=\"package-manager\" queryString defaultValue={constants.defaultPackageManager} values={constants.packageManagers}>\n<TabItem value=\"npm\">\n\n```shell\nnpm install --save-dev babel-plugin-module-resolver\n```\n\n</TabItem>\n<TabItem value=\"yarn\">\n\n```shell\nyarn add --dev babel-plugin-module-resolver\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "99ec837903321320d7638207598a974db05f0d3e3a8ea01b11dd7d9cf31db093",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_8cb91678"
      }
    },
    {
      "segment_id": "8aacd6aa",
      "source_content": "3. Finally, configure your `babel.config.js` (note that the syntax for your `babel.config.js` is different from your `tsconfig.json`):",
      "source_content_hash": "5df022fea03356f2f2f28a088dea39d90b0500ec97aa81c35fd08218e80d34c5",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "3. 最後，配置你的 `babel.config.js`（注意 `babel.config.js` 的語法與 `tsconfig.json` 不同）："
      }
    },
    {
      "segment_id": "03859cae",
      "source_content": "```diff {3-13}\n{\n  plugins: [\n+    [\n+       'module-resolver',\n+       {\n+         root: ['./src'],\n+         extensions: ['.ios.js', '.android.js', '.js', '.ts', '.tsx', '.json'],\n+         alias: {\n+           tests: ['./tests/'],\n+           \"@components\": \"./src/components\",\n+         }\n+       }\n+    ]\n  ]\n}\n```",
      "source_content_hash": "1cc7d685acecb7f6c91962a8dcd5792380d4b8bd5f7ab07c74788840742f2f14",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_03859cae"
      }
    },
    {
      "segment_id": "97446e59",
      "source_content": "[react-ts]: https://reactjs.org/docs/static-type-checking.html#typescript",
      "source_content_hash": "07899a926d8346ddf3b5d9964ec4a0134a0a89623b835d1fdec1f2d70394f492",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[react-ts]: https://reactjs.org/docs/static-type-checking.html#typescript"
      }
    },
    {
      "segment_id": "1b232046",
      "source_content": "[ts]: https://www.typescriptlang.org/",
      "source_content_hash": "a4d36caac03fdb3ae376aebe13f97466557ee4ea561eef6c447ecd5afab2d645",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[ts]: https://www.typescriptlang.org/"
      }
    },
    {
      "segment_id": "9567d3b5",
      "source_content": "[flow]: https://flow.org",
      "source_content_hash": "91a8fbaa3283a44f9cad105b2a07a173dd228b491f154da5246da6953ff9b76e",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[flow]: https://flow.org"
      }
    },
    {
      "segment_id": "5af221e8",
      "source_content": "[ts-template]: https://github.com/react-native-community/react-native-template-typescript",
      "source_content_hash": "5a4430773e5cdad1970a80cacb685ced64c403a6b97af9b17bc72ac5b6472179",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[ts-template]: https://github.com/react-native-community/react-native-template-typescript"
      }
    },
    {
      "segment_id": "031d31f2",
      "source_content": "[babel]: /docs/javascript-environment#javascript-syntax-transformers",
      "source_content_hash": "4cc9afede4cc1794759c278e94a23264d3e64370b6bbffa55ff5f1a45f47d805",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[babel]: /docs/javascript-environment#javascript-syntax-transformers"
      }
    },
    {
      "segment_id": "9c26d7f9",
      "source_content": "[babel-7-caveats]: https://babeljs.io/docs/en/next/babel-plugin-transform-typescript",
      "source_content_hash": "91d511ad8a0c62668d589675e9ee06c05c9b61d58ee97a2852de31b619d6ad62",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[babel-7-caveats]: https://babeljs.io/docs/en/next/babel-plugin-transform-typescript"
      }
    },
    {
      "segment_id": "c79c003d",
      "source_content": "[cheat]: https://github.com/typescript-cheatsheets/react-typescript-cheatsheet#reacttypescript-cheatsheets",
      "source_content_hash": "1bfaf25241bbb72000de77d0bc449c180e7b63223f514edf7632c95238ef2c06",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[cheat]: https://github.com/typescript-cheatsheets/react-typescript-cheatsheet#reacttypescript-cheatsheets"
      }
    },
    {
      "segment_id": "5f8de822",
      "source_content": "[ts-handbook]: https://www.typescriptlang.org/docs/handbook/intro.html",
      "source_content_hash": "064134f9c01fbcb0b2b7dca0be2b379198bfc517713c00c0bd3941a7f96aacd8",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[ts-handbook]: https://www.typescriptlang.org/docs/handbook/intro.html"
      }
    },
    {
      "segment_id": "6c3e5cd5",
      "source_content": "[path-map]: https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping",
      "source_content_hash": "b3f7722bcb686ac855f90f5b0b178c330172195819ccadb27f6c1f0df4c62455",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[path-map]: https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping"
      }
    },
    {
      "segment_id": "dab76fba",
      "source_content": "[bpmr]: https://github.com/tleunen/babel-plugin-module-resolver",
      "source_content_hash": "607cc20965ad64d19b3fb7f539cf9f54ee10dd2850f3e60ac9a07bc316b57541",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[bpmr]: https://github.com/tleunen/babel-plugin-module-resolver"
      }
    },
    {
      "segment_id": "46652506",
      "source_content": "[expo]: https://expo.io",
      "source_content_hash": "a7b6d69ec7ec4f1ef6ffcff34cb9daf7d3a00bf2c386a318b87cd48c5edc8fd7",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[expo]: https://expo.io"
      }
    },
    {
      "segment_id": "2adc2a32",
      "source_content": "[ignite]: https://github.com/infinitered/ignite",
      "source_content_hash": "879e8614a8d065a664ae48612b9230564cf078b33679739815b03f6721fc6bfb",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[ignite]: https://github.com/infinitered/ignite"
      }
    },
    {
      "segment_id": "c1cc186a",
      "source_content": "[tsplay]: https://www.typescriptlang.org/play?strictNullChecks=false&jsx=3#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKFEljgG8AhAVxhggDsAaOAZRgCeAGyS8AFkiQweAFSQAPaXABqwJAHcAvnGy4CRdDAC0HFDGAA3JGSpUFteILBI4ABRxgAznAC8DKnBwpiBIAFxwnjBQwBwA5hSUgQBGKJ5IAKIcMGLMnsCpIAAySFZCAPzhHMwgSUhQCZq2lGickXAAEkhCQhDhyIYAdABiAMIAPO4QXgB8vnAAFPRBKCE8KWmZ2bn5nkUlXXMADHCaAJS+s-QBcC0cbQDaSFk5eQXFpTxpMJsvO3ulAF05v0MANcqIYGYkPN1hlnts3vshKcEtdbm1OABJDhoIghLJzebnHyzL4-BG7d5deZPLavSlIuAAajgAEYUWjWvBOAARJC4pD4+B+IkXCJScn0-7U2m-RGlOCzY5lOCyinSoRwIxsuDhQ4cyicu7wWIS+RoIQrMzATgAWRQUAA1t4RVUQCMxA7PJVqrUoMTZm6PV7FXBlXAAIJQKAoATzIOeqDeFnsgYAKwgMXm+AAhPhzuF8DZDYk4EQYMwoBwFtdAmNVBoIoIRD56JFhEhPANbpCYnVNNNa4E4GM5Iomx3W+2RF3YkQpDFYgOh8OOl0evR8ARGqXV4F6MEkDu98P6KbvubLSBrXaHc6afCpVTkce92MAPRjmCD3fD+tqdQfxPOsWDYTgVz3cwYBbAAibEBVSFw1SlGCINXdA0E7PIkmAIRgEEQoUFqIQfBgmIBSFVDfxPTh3Cw1ssRxPFaVfYCbggHooFIpIhGYJAqLY98gOAsZQPYDg0OHKDYL5BC0lVR8-gEti4AwrDgBwvCCKIrpSIAE35ZismUtjaKITxPAYjhZKMmBWOAlpONIog9JMvchIgj8G0AocvIA4SDU0VFmi5CcZzmfgO3ESQYG7AwYGhK5Sx7FA+ygcIktXTARHkcJWS4IcUDw2IOExBKQG9OAYMwrI6hggrfzTXJzEwAQRk4BKsnCaraTq65NAawI5xixcMqHTAOt4YAAC8wjgAAmQ5BuHCasgAdSQYBYjEGBCySDi9PwZbAmvKBYhiPKADZloGqgzmC+xoHgAzMBQZghHgTpuggBIgA",
      "source_content_hash": "d1cd01c79dd46282b68dee64104fddac7abbc61f79f099407737c6e10635186b",
      "node_type": "definition",
      "translatable": true,
      "translations": {
        "zh-hant": "[tsplay]: https://www.typescriptlang.org/play?strictNullChecks=false&jsx=3#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4BYAKFEljgG8AhAVxhggDsAaOAZRgCeAGyS8AFkiQweAFSQAPaXABqwJAHcAvnGy4CRdDAC0HFDGAA3JGSpUFteILBI4ABRxgAznAC8DKnBwpiBIAFxwnjBQwBwA5hSUgQBGKJ5IAKIcMGLMnsCpIAAySFZCAPzhHMwgSUhQCZq2lGickXAAEkhCQhDhyIYAdABiAMIAPO4QXgB8vnAAFPRBKCE8KWmZ2bn5nkUlXXMADHCaAJS+s-QBcC0cbQDaSFk5eQXFpTxpMJsvO3ulAF05v0MANcqIYGYkPN1hlnts3vshKcEtdbm1OABJDhoIghLJzebnHyzL4-BG7d5deZPLavSlIuAAajgAEYUWjWvBOAARJC4pD4+B+IkXCJScn0-7U2m-RGlOCzY5lOCyinSoRwIxsuDhQ4cyicu7wWIS+RoIQrMzATgAWRQUAA1t4RVUQCMxA7PJVqrUoMTZm6PV7FXBlXAAIJQKAoATzIOeqDeFnsgYAKwgMXm+AAhPhzuF8DZDYk4EQYMwoBwFtdAmNVBoIoIRD56JFhEhPANbpCYnVNNNa4E4GM5Iomx3W+2RF3YkQpDFYgOh8OOl0evR8ARGqXV4F6MEkDu98P6KbvubLSBrXaHc6afCpVTkce92MAPRjmCD3fD+tqdQfxPOsWDYTgVz3cwYBbAAibEBVSFw1SlGCINXdA0E7PIkmAIRgEEQoUFqIQfBgmIBSFVDfxPTh3Cw1ssRxPFaVfYCbggHooFIpIhGYJAqLY98gOAsZQPYDg0OHKDYL5BC0lVR8-gEti4AwrDgBwvCCKIrpSIAE35ZismUtjaKITxPAYjhZKMmBWOAlpONIog9JMvchIgj8G0AocvIA4SDU0VFmi5CcZzmfgO3ESQYG7AwYGhK5Sx7FA+ygcIktXTARHkcJWS4IcUDw2IOExBKQG9OAYMwrI6hggrfzTXJzEwAQRk4BKsnCaraTq65NAawI5xixcMqHTAOt4YAAC8wjgAAmQ5BuHCasgAdSQYBYjEGBCySDi9PwZbAmvKBYhiPKADZloGqgzmC+xoHgAzMBQZghHgTpuggBIgA"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-0.70/typescript.md",
  "last_updated_timestamp": "2025-06-19T15:33:40.532959+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "8a586c16d46c4f21f57263c5bdf31aac704c4ae33bcb656ff6db2a9995ad560d"
  }
}