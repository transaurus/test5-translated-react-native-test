{
  "source_file_path_relative_to_docusaurus_root": "blog/2016-08-12-react-native-meetup-san-francisco.md",
  "source_file_content_hash": "0a982389f1e2675493eec82a354b63f60a0aac6433f0de5b574d792bf14820ad",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: San Francisco Meetup Recap\nauthors: [hectorramos]\nhero: '/blog/img/rnmsf-august-2016-hero.jpg'\ntags: [events]\n---",
      "source_content_hash": "be5eaafff862548a2ee5236a76c401bcc545f20f232754f3e36ae51e0f624297",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "Last week I had the opportunity to attend the [React Native Meetup](https://www.meetup.com/React-Native-San-Francisco/photos/27168649/#452793854) at Zynga’s San Francisco office. With around 200 people in attendance, it served as a great place to meet other developers near me that are also interested in React Native.",
      "source_content_hash": "3f25bd59d3ff527683fdf6f0e2f4b8d691241efb0f254e64cdf76b61e14e04c9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "上週我有幸參加了在Zynga舊金山辦公室舉辦的[React Native Meetup](https://www.meetup.com/React-Native-San-Francisco/photos/27168649/#452793854)。約有200人與會，這成為了一個絕佳的機會，讓我認識附近其他對React Native感興趣的開發者。"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "![](/blog/assets/rnmsf-august-2016-hero.jpg)",
      "source_content_hash": "66a4feb4c7baa7f4a2209672c2906e3bae6802296ba1f580ce72ed780d46d98e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-hero.jpg)"
      }
    },
    {
      "segment_id": "8d66f911",
      "source_content": "I was particularly interested in learning more about how React and React Native are used at companies like Zynga, Netflix, and Airbnb. The agenda for the night would be as follows:",
      "source_content_hash": "44f8d323ac2096e58534bcf16105537582164234941b6b5c47dfbe6f9b5b6178",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "我特別想了解Zynga、Netflix和Airbnb等公司如何使用React和React Native。當晚的議程如下："
      }
    },
    {
      "segment_id": "9e760345",
      "source_content": "- Rapid Prototyping in React\n- Designing APIs for React Native\n- Bridging the Gap: Using React Native in Existing Codebases",
      "source_content_hash": "db9d3d6ac17f79df3298de689ecd8de05f74f557d06f926b156cca1e2955a08b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 使用React進行快速原型開發\n- 為React Native設計API\n- 彌合差距：在現有代碼庫中使用React Native"
      }
    },
    {
      "segment_id": "39b3772c",
      "source_content": "But first, the event started off with a quick introduction and a brief recap of recent news:",
      "source_content_hash": "41b9610fc98b3759393cecbd56c1f457a95bcb27ad3f86e49f8aa3deeb777cc0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "但首先，活動以簡短的介紹和近期新聞回顧開場："
      }
    },
    {
      "segment_id": "3b695c37",
      "source_content": "- Did you know that React Native is now the [top Java repository on GitHub](https://twitter.com/jamespearce/status/759637111880359937)?\n- [rnpm](https://github.com/rnpm/rnpm) is now part of React Native core! You can now use `react-native link` in place of `rnpm link` to [install libraries with native dependencies](/docs/linking-libraries-ios).\n- The React Native Meetup community is growing fast! There are now over 4,800 developers across a variety of React Native meetup groups all over the globe.",
      "source_content_hash": "6b5d07202c59ef4f2622e8f4ec8a5c888f7e77ed2d20dc9a61d2d482bae05aab",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 你知道React Native現在是[GitHub上最受歡迎的Java倉庫](https://twitter.com/jamespearce/status/759637111880359937)嗎？\n- [rnpm](https://github.com/rnpm/rnpm)現在已成為React Native核心的一部分！你可以使用`react-native link`來替代`rnpm link`，以[安裝帶有原生依賴的庫](/docs/linking-libraries-ios)。\n- React Native Meetup社群正在快速成長！現在全球各地有超過4,800名開發者參與各種React Native Meetup小組。"
      }
    },
    {
      "segment_id": "98cfbd53",
      "source_content": "If [one of these meetups](https://www.meetup.com/find/?allMeetups=false&keywords=react+native&radius=Infinity&userFreeform=San+Francisco%2C+CA&mcId=z94105&mcName=San+Francisco%2C+CA&sort=recommended&eventFilter=mysugg) is held near you, I highly recommend attending!",
      "source_content_hash": "18c46c38714419c9076f4c55bfb8e3ace01f0344ffd02349ee98e84c11d73092",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "如果[這些Meetup](https://www.meetup.com/find/?allMeetups=false&keywords=react+native&radius=Infinity&userFreeform=San+Francisco%2C+CA&mcId=z94105&mcName=San+Francisco%2C+CA&sort=recommended&eventFilter=mysugg)在你附近舉辦，我強烈建議參加！"
      }
    },
    {
      "segment_id": "79b2d0b9",
      "source_content": "## Rapid Prototyping in React at Zynga",
      "source_content_hash": "49a0444fbbec23f5252b58b1ce9124e1853e1772aa61b6bc3d04b4d590550565",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在Zynga使用React進行快速原型開發"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "The first round of news was followed by a quick introduction by Zynga, our hosts for the evening. Abhishek Chadha talked about how they use React to quickly prototype new experiences on mobile, demoing a quick prototype of a Draw Something-like app. They use a similar approach as React Native, providing access to native APIs via a bridge. This was demonstrated when Abhishek used the device's camera to snap a photo of the audience and then drew a hat on someone's head.",
      "source_content_hash": "fab12702d13edfb3a24450a9895629675225d0b79a8196a6d1c82cad970174c2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "第一輪新聞之後，由當晚的主辦方Zynga進行簡短介紹。Abhishek Chadha談到他們如何使用React在移動設備上快速原型化新體驗，並演示了一個類似Draw Something的應用原型。他們採用了與React Native類似的方法，通過橋接提供對原生API的訪問。當Abhishek使用設備的相機拍攝觀眾照片並在某人的頭上畫了一頂帽子時，這一點得到了展示。"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## Designing APIs for React Native at Netflix",
      "source_content_hash": "668cdaa808e38d222e11017396fec7de1953ce60bebb08913aaa4a77001f35bf",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 在Netflix為React Native設計API"
      }
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "Up next, the first featured talk of the evening. [Clarence Leung](https://twitter.com/clarler), Senior Software Engineer at Netflix, presented his talk on Designing APIs for React Native. First he noted the two main types of libraries one may work on: components such as tab bars and date pickers, and libraries that provide access to native services such as the camera roll or in-app payments. There are two ways one may approach when building a library for use in React Native:",
      "source_content_hash": "57fb963c2615e71569624d00f38b9ab9ae3463d0a3edcb728a1218f64c651232",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "接下來是當晚的第一場主題演講。Netflix的高級軟體工程師[Clarence Leung](https://twitter.com/clarler)發表了關於為React Native設計API的演講。他首先指出開發者可能處理的兩類主要庫：如標籤欄和日期選擇器這樣的組件，以及提供對原生服務（如相機膠卷或應用內支付）訪問的庫。在為React Native構建庫時，有兩種主要方法："
      }
    },
    {
      "segment_id": "f2c8a42b",
      "source_content": "- Provide platform-specific components\n- A cross-platform library with a similar API for both Android and iOS",
      "source_content_hash": "36ed779c15e0b0bdc1cd4266c1e4082d443e1bff2d0d2e165a787511b0c50ce3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 提供平台特定的組件\n- 構建一個跨平台庫，為Android和iOS提供相似的API"
      }
    },
    {
      "segment_id": "97ae4a01",
      "source_content": "Each approach has its own considerations, and it’s up to you to determine what works best for your needs.",
      "source_content_hash": "34ebfd5c87a0aa2c1c1177a3e94fd77acc7930f5036fb8fca63626fa30cdc5e9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "每種方法都有其考量，由你決定哪種最適合你的需求。"
      }
    },
    {
      "segment_id": "c3a738de",
      "source_content": "**Approach #1**",
      "source_content_hash": "274e0263cc6617c9af177e663781438147ded2cfbe67bc769789cc203c03ea9c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**方法一**"
      }
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "As an example of platform-specific components, Clarence talked about the DatePickerIOS and DatePickerAndroid from core React Native. On iOS, date pickers are rendered as part of the UI and can be easily embedded in an existing view, while date pickers on Android are presented modally. It makes sense to provide separate components in this case.",
      "source_content_hash": "d0778ceb9bf4d9aff6bd71230c4e9434a196f26a3ba6ecb7a2685b5042b9136b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "作為平台特定組件的例子，Clarence談到了React Native核心中的DatePickerIOS和DatePickerAndroid。在iOS上，日期選擇器作為UI的一部分渲染，可以輕鬆嵌入現有視圖中，而在Android上，日期選擇器以模態方式呈現。在這種情況下，提供獨立的組件是有意義的。"
      }
    },
    {
      "segment_id": "1042b50d",
      "source_content": "**Approach #2**",
      "source_content_hash": "9fc5ab058795cb67371bb7aa558cb0c6ea53e2c7e1fdaf91a2be1249f096635b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "**方法二**"
      }
    },
    {
      "segment_id": "aa1e7006",
      "source_content": "Photo pickers, on the other hand, are treated similarly on Android and iOS. There are some slight differences — Android does not group photos into folders like iOS does with Selfies, for example — but those are easily handled using `if` statements and the `Platform` component.",
      "source_content_hash": "0100b507a5a448e3df53e597c0cd9b100e59f485be5beb6834f4f1fcbac4d8ec",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "另一方面，照片選擇器在Android和iOS上的處理方式相似。雖然有一些細微差別——例如，Android不會像iOS那樣將照片分組到「自拍」等文件夾中——但這些可以輕鬆通過`if`語句和`Platform`組件來處理。"
      }
    },
    {
      "segment_id": "13d9cd70",
      "source_content": "Regardless of which approach you settle on, it’s a good idea to minimize the API surface and build app-specific libraries. For example, iOS’s In-App Purchase framework supports one-time, consumable purchases, as well as renewable subscriptions. If your app will only need to support consumable purchases, you may get away with dropping support for subscriptions in your cross-platform library.",
      "source_content_hash": "2a438b8d55aaedf9d12461531441e9fab059fb27f2d876a13e93975eda5feed2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "無論您最終選擇哪種方法，最小化 API 表面積並構建針對特定應用的程式庫都是個好主意。舉例來說，iOS 的應用內購買框架支援一次性消費性購買與可續訂訂閱。如果您的應用只需要支援消費性購買，或許可以在跨平台程式庫中省略訂閱功能。"
      }
    },
    {
      "segment_id": "29528c8d",
      "source_content": "![](/blog/assets/rnmsf-august-2016-netflix.jpg)",
      "source_content_hash": "67e174e48e0e74e3537b1d2e291d86bcbdaab75e36d45a39808187331e04abd2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-netflix.jpg)"
      }
    },
    {
      "segment_id": "c504c207",
      "source_content": "There was a brief Q&A session at the end of Clarence’s talk. One of the interesting tid bits that came out of it was that around 80% of the React Native code written for these libraries at Netflix is shared across both Android and iOS.",
      "source_content_hash": "1d7ce0e54cf7c3383b45e50100048d1d263022f2e1058741f2308f0909da6ff0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Clarence 的演講結束後進行了簡短的問答環節。其中一個有趣的細節是，Netflix 為這些程式庫編寫的 React Native 程式碼中，約有 80% 是 Android 和 iOS 共用的。"
      }
    },
    {
      "segment_id": "c6cc90a0",
      "source_content": "## Bridging the Gap, Using React Native in Existing Codebases",
      "source_content_hash": "e6472bde952d6e02df49d1c658b267c64d9daacfb6a91d17ac093695108be373",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 彌合鴻溝：在現有程式碼庫中使用 React Native"
      }
    },
    {
      "segment_id": "d3649a1e",
      "source_content": "The final talk of the night was by [Leland Richardson](https://twitter.com/intelligibabble) from Airbnb. The talk was focused on the use of React Native in existing codebases. I already know how easy it is to write a new app from scratch using React Native, so I was very interested to hear about Airbnb’s experience adopting React Native in their existing native apps.",
      "source_content_hash": "de3292eb7205e2868d1a472c20a68154900a7d4d10bb5af66e39bc30a3c44231",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當晚最後一場演講由 Airbnb 的 [Leland Richardson](https://twitter.com/intelligibabble) 主講，主題聚焦於如何在現有程式碼庫中使用 React Native。我已經知道從頭開始用 React Native 編寫新應用有多簡單，因此對 Airbnb 在現有原生應用中採用 React Native 的經驗非常感興趣。"
      }
    },
    {
      "segment_id": "4d52a261",
      "source_content": "Leland started off by talking about greenfield apps versus brownfield apps. Greenfield means to start a project without the need to consider any prior work. This is in contrast to brownfield projects where you need to take into account the existing project’s requirements, development processes, and all of the teams various needs.",
      "source_content_hash": "fcaa1b63cffd334035648bf4a204286ad65791e2c3abf03b5eee6dd5347f164e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Leland 首先談到了「綠地專案」(greenfield) 與「棕地專案」(brownfield) 的區別。綠地專案是指無需考慮先前工作的新專案，而棕地專案則需要考量現有專案的需求、開發流程及各團隊的不同需求。"
      }
    },
    {
      "segment_id": "23dfb152",
      "source_content": "When you’re working on a greenfield app, the React Native CLI sets up a single repository for both Android and iOS and everything just works. The first challenge against using React Native at Airbnb was the fact that the Android and iOS app each had their own repository. Multi-repo companies have some hurdles to get past before they can adopt React Native.",
      "source_content_hash": "89a6ac195ad52d5ae598b4bed63ce1aaa5345c6b875f6df490ddce829c13bc5d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在綠地應用中，React Native CLI 會為 Android 和 iOS 設置單一儲存庫，一切都能順利運作。Airbnb 採用 React Native 的第一個挑戰是，他們的 Android 和 iOS 應用各自擁有獨立的儲存庫。多儲存庫架構的公司需要克服一些障礙才能採用 React Native。"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "To get around this, Airbnb first set up a new repo for the React Native codebase. They used their continuous integration servers to mirror the Android and iOS repos into this new repo. After tests are run and the bundle is built, the build artifacts are synced back to the Android and iOS repos. This allows the mobile engineers to work on native code without altering their development environment. Mobile engineers don't need to install npm, run the packager, or remember to build the JavaScript bundle. The engineers writing actual React Native code do not have to worry about syncing their code across Android and iOS, as they work on the React Native repository directly.",
      "source_content_hash": "e2e18da60acc38dc8df2c53c168d16fd13a2219f740861a3bb7014f13a8c5f8f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "為了解決這個問題，Airbnb 首先為 React Native 程式碼庫建立了新儲存庫。他們透過持續整合伺服器將 Android 和 iOS 儲存庫鏡像到這個新儲存庫中。在執行測試並建構套件後，建構產物會同步回 Android 和 iOS 儲存庫。這種方式讓行動工程師能在不改變開發環境的情況下處理原生程式碼，無需安裝 npm、執行封裝程式或記得建構 JavaScript 套件。而實際編寫 React Native 程式碼的工程師也無需擔心跨平台同步問題，因為他們直接在新儲存庫中工作。"
      }
    },
    {
      "segment_id": "8b2a52b1",
      "source_content": "This does come with some drawbacks, mainly they could not ship atomic updates. Changes that require a combination of native and JavaScript code would require three separate pull requests, all of which had to be carefully landed. In order to avoid conflicts, CI will fail to land changes back to the Android and iOS repos if master has changed since the build started. This would cause long delays during high commit frequency days (such as when new releases are cut).",
      "source_content_hash": "816c36160181698208b28da8da7879ae59d696d13da2526a8dd6abf47ca5011c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這種做法存在一些缺點，主要是無法進行原子更新。需要同時修改原生和 JavaScript 程式碼的變更，必須提交三個獨立的 pull request，且都需謹慎合併。為避免衝突，當主分支在建置期間發生變更時，CI 會中止將變更同步回 Android 和 iOS 儲存庫的流程，這在高提交頻率時段（例如發布新版本時）會導致嚴重延遲。"
      }
    },
    {
      "segment_id": "5dae11e3",
      "source_content": "Airbnb has since moved to a mono repo approach. Fortunately this was already under consideration, and once the Android and iOS teams became comfortable with using React Native they were happy to accelerate the move towards the mono repo.",
      "source_content_hash": "be9df80264d481439da159410a0cf042e67cf7b3b117fc1f37ffaf6f17f43a8a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Airbnb 後來轉向單一儲存庫架構。幸運的是這個方案原本就在考慮中，當 Android 和 iOS 團隊熟悉 React Native 後，他們樂於加速遷移至單一儲存庫。"
      }
    },
    {
      "segment_id": "0bb95128",
      "source_content": "This has solved most of the issues they had with the split repo approach. Leland did note that this does cause a higher strain on the version control servers, which may be an issue for smaller companies.",
      "source_content_hash": "4b63dbfc15f04c2e9db1c1415b20ecb94510a97e3534b67673d025328b9bb2be",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "這解決了分散式儲存庫架構的大部分問題。Leland 也指出，這會對版本控制伺服器造成較大負荷，對小型公司可能是個問題。"
      }
    },
    {
      "segment_id": "657c2b20",
      "source_content": "![](/blog/assets/rnmsf-august-2016-airbnb.jpg)",
      "source_content_hash": "23c289614f56fce3456348057cd4276521de9ccfc2a7ed06301691d2e9a02cea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-airbnb.jpg)"
      }
    },
    {
      "segment_id": "52388877",
      "source_content": "### The Navigation Problem",
      "source_content_hash": "8ed705c795fa5931b8150cda9ac7c8e3f02b62e433193af3de1a54cdcf662eda",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 導航難題"
      }
    },
    {
      "segment_id": "eab056be",
      "source_content": "The second half of Leland's talk focused on a topic that is dear to me: the Navigation problem in React Native. He talked about the abundance of navigation libraries in React Native, both first party and third party. NavigationExperimental was mentioned as something that seemed promising, but ended up not being well suited for their use case.",
      "source_content_hash": "fccaa5835b73857b2abde59528ec14803de6544da6f1c61f265fbe5674a65ad8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Leland 演講的後半部分聚焦於我深切關注的主題：React Native 中的導航問題。他談到 React Native 中豐富的導航程式庫生態，包括官方與第三方方案。NavigationExperimental 曾被視為有潛力的解決方案，但最終不符合他們的使用情境。"
      }
    },
    {
      "segment_id": "f01228d3",
      "source_content": "In fact, none of the existing navigation libraries seem to work well for brownfield apps. A brownfield app requires that the navigation state be fully owned by the native app. For example, if a user’s session expires while a React Native view is being presented, the native app should be able to take over and present a login screen as needed.",
      "source_content_hash": "905ba478e643ad6b037d5796888df6a61ad02befab7b673ad0ca1d6fcda75ac4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "事實上，現有的導航程式庫似乎都不太適合棕地應用。這類應用要求導航狀態必須完全由原生應用掌控。例如，當使用者在 React Native 視圖中操作時若會話過期，原生應用必須能接管流程並視需要顯示登入畫面。"
      }
    },
    {
      "segment_id": "afa378f7",
      "source_content": "Airbnb also wanted to avoid replacing native navigation bars with JavaScript versions as part of a transition, as the effect could be jarring. Initially they limited themselves to modally presented views, but this obviously presented a problem when it came to adopting React Native more widely within their apps.",
      "source_content_hash": "2f8c4397ef3f933afbd68ff8b55979dec82cb5fa9e58c8e109b33a6f523abac9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Airbnb 同時希望避免在過渡期間用 JavaScript 版本取代原生導航欄，因為這種效果可能會令人不適。最初他們將自己限制在模態呈現的視圖中，但這顯然在更廣泛地採用 React Native 時帶來了問題。"
      }
    },
    {
      "segment_id": "e8e162a9",
      "source_content": "They decided that they needed their own library. The library is called `airbnb-navigation`. The library has not yet being open sourced as it is strongly tied to Airbnb’s codebase, but it is something they’d like to release by the end of the year.",
      "source_content_hash": "6a0942a1278ae656a901eeeeba28b536b2717796143da4e726f65d54c52d546a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "他們決定需要開發自己的函式庫。這個函式庫名為 `airbnb-navigation`。由於該函式庫與 Airbnb 的代碼庫緊密耦合，目前尚未開源，但他們計劃在今年年底前發布。"
      }
    },
    {
      "segment_id": "463ed165",
      "source_content": "I won’t go into much detail into the library’s API, but here are some of the key takeaways:",
      "source_content_hash": "bf553388d38eb47fb4ef3c378210366867691a775e5be021c63da4d018fa1650",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "我不會深入探討該函式庫的 API 細節，但以下是幾個關鍵要點："
      }
    },
    {
      "segment_id": "536b7b6b",
      "source_content": "- One must preregister scenes ahead of time\n- Each scene is displayed within its own `RCTRootView`. They are presented natively on each platform (e.g. `UINavigationController`s are used on iOS).\n- The main `ScrollView` in a scene should be wrapped in a `ScrollScene` component. Doing so allows you to take advantage of native behaviors such as tapping on the status bar to scroll to the top on iOS.\n- Transitions between scenes are handled natively, no need to worry about performance.\n- The Android back button is automatically supported.\n- They can take advantage of View Controller based navigation bar styling via a Navigator.Config UI-less component.",
      "source_content_hash": "6cfbbe47c38af4d339eafc8761dc8674c7660d9fbdf302c4d32c94b76a115730",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 必須事先預註冊場景\n- 每個場景都在自己的 `RCTRootView` 中顯示。它們在各平台上以原生方式呈現（例如 iOS 上使用 `UINavigationController`）。\n- 場景中的主要 `ScrollView` 應包裹在 `ScrollScene` 組件中。這樣可以充分利用原生行為，例如在 iOS 上點擊狀態欄以滾動至頂部。\n- 場景之間的轉場由原生處理，無需擔心性能問題。\n- 自動支援 Android 返回按鈕。\n- 可以通過無 UI 的 Navigator.Config 組件利用基於 View Controller 的導航欄樣式設定。"
      }
    },
    {
      "segment_id": "0750bfa1",
      "source_content": "There’s also some considerations to keep in mind:",
      "source_content_hash": "e770366d968c1cb5fe669b2fe5ad7f24835afe71fbf879d53fd0cedbf7860e76",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "還有一些需要注意的事項："
      }
    },
    {
      "segment_id": "2fc7ec55",
      "source_content": "- The navigation bar is not easily customized in JavaScript, as it is a native component. This is intentional, as using native navigation bars is a hard requirement for this type of library.\n- ScreenProps must be serialized/de-serialized whenever they're sent through the bridge, so care must be taken if sending too much data here.\n- Navigation state is owned by the native app (also a hard requirement for the library), so things like Redux cannot manipulate navigation state.",
      "source_content_hash": "157ab619f6a346a30cec90c44a91e35c3b4286184a3fe757e07de6cda4e024ea",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 導航欄在 JavaScript 中不易自訂，因為它是原生組件。這是刻意設計的，因為使用原生導航欄是此類函式庫的硬性要求。\n- ScreenProps 在通過橋接發送時必須序列化/反序列化，因此如果在此處發送過多數據，需格外小心。\n- 導航狀態由原生應用擁有（這也是函式庫的硬性要求），因此像 Redux 這樣的工具無法操作導航狀態。"
      }
    },
    {
      "segment_id": "a311e967",
      "source_content": "Leland's talk was also followed by a Q&A session. Overall, Airbnb is satisfied with React Native. They’re interested in using Code Push to fix any issues without going through the App Store, and their engineers love Live Reload, as they don't have to wait for the native app to be rebuilt after every minor change.",
      "source_content_hash": "26933e9bfb050be849c5af43538e32604ec55865c918565fc81f4bc8e99a439d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Leland 的演講結束後也進行了問答環節。總體而言，Airbnb 對 React Native 感到滿意。他們有興趣使用 Code Push 來修復問題而無需通過 App Store，且他們的工程師喜歡 Live Reload 功能，因為無需在每次小改動後等待原生應用重新構建。"
      }
    },
    {
      "segment_id": "f8edb6d2",
      "source_content": "## Closing Remarks",
      "source_content_hash": "3415c8edd6297483f5faa2e5d9a3412f3c22947784eb6677959db99611a1d8d8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 閉幕致詞"
      }
    },
    {
      "segment_id": "1862c5fe",
      "source_content": "The event ended with some additional React Native news:",
      "source_content_hash": "9a9250114953e260cb34ff2fc573fd0f20543811acde07cca1fcf7e98df85e48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "活動最後分享了一些 React Native 的最新消息："
      }
    },
    {
      "segment_id": "2d15468d",
      "source_content": "- Deco announced their [React Native Showcase](https://www.decosoftware.com/showcase), and invited everyone to add their app to the list.\n- The recent [documentation overhaul](/blog/2016/07/06/toward-better-documentation) got a shoutout!\n- Devin Abbott, one of the creators of Deco IDE, will be teaching an introductory [React Native course](https://www.decosoftware.com/course).",
      "source_content_hash": "27842e81a2da7e53c0a3fa79042ff8d762db34b2c348556cd06e279317ca9780",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- Deco 宣布了他們的 [React Native Showcase](https://www.decosoftware.com/showcase)，並邀請大家將自己的應用添加到列表中。\n- 最近的[文件全面翻新](/blog/2016/07/06/toward-better-documentation)獲得了特別提及！\n- Deco IDE 的創建者之一 Devin Abbott 將開設一門 [React Native 入門課程](https://www.decosoftware.com/course)。"
      }
    },
    {
      "segment_id": "c1eaf30b",
      "source_content": "![](/blog/assets/rnmsf-august-2016-docs.jpg)",
      "source_content_hash": "09ffbe7543438f15e27c70980cafed435efcde37a02a8b998ab957e8475bd6f8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![](/blog/assets/rnmsf-august-2016-docs.jpg)"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "Meetups provide a good opportunity to meet and learn from other developers in the community. I'm looking forward to attending more React Native meetups in the future. If you make it up to one of these, please look out for me and let me know how we can make React Native work better for you!",
      "source_content_hash": "defda9203e0e522335a9d61575d17cc0721e5af2d1355370c7eabb6035a97681",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "聚會提供了與社區中其他開發者見面並學習的良機。我期待未來參加更多 React Native 聚會。如果你也參加了這些活動，請留意我並告訴我我們如何能讓 React Native 更好地為你服務！"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2016-08-12-react-native-meetup-san-francisco.md",
  "last_updated_timestamp": "2025-06-19T15:33:15.440276+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "0a982389f1e2675493eec82a354b63f60a0aac6433f0de5b574d792bf14820ad"
  }
}