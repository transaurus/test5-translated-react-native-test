{
  "source_file_path_relative_to_docusaurus_root": "contributing/managing-pull-requests.md",
  "source_file_content_hash": "5ce0fcc2dce33abb83f9439350a31e471b8167306b59111837d90ced5f320036",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Managing Pull Requests\n---",
      "source_content_hash": "dfcf2530b565868f655cdb5b7147a90df20172d18554b66a918eda1149eec8bd",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "e7ec8f99",
      "source_content": "Reviewing a pull request can take a considerable amount of time. In some cases, the review might require more time to perform than it took someone to write and submit their changes! It's therefore necessary to do some preliminary work to ensure each pull request is in a good state to be reviewed.",
      "source_content_hash": "e1a9ff988aabbbd42e96390144f80564c2ef4e8d1641437634f897051f906b43",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "審查一個 pull request 可能需要相當長的時間。在某些情況下，進行審查所需的時間甚至可能比撰寫和提交變更的時間還要多！因此，有必要進行一些初步工作，以確保每個 pull request 都處於適合審查的良好狀態。"
      }
    },
    {
      "segment_id": "6ef78e84",
      "source_content": "A pull request should consist of three main sections:",
      "source_content_hash": "aded155bd8ec70b8c1f532772e29f45eaf3118d9a0ba2c00ca04aa8a4319a062",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "一個 pull request 應包含三個主要部分："
      }
    },
    {
      "segment_id": "abcf54e3",
      "source_content": "- A summary. This helps us understand the motivation behind the changes.\n- A changelog. This helps us write the release notes. It also serves as a brief summary of your changes.\n- A test plan. This might be the most important part of your pull request. A test plan should be a reproducible step-by-step guide so that a reviewer can verify your change is working as intended. It's also a good idea to attach screenshots or videos for user visible changes.",
      "source_content_hash": "fa921c979846e0c55f040a8768bfd26d11804a8bb91c3b2beacfb29ddca8cb8b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 摘要。這有助於我們理解變更的動機。\n- 變更日誌。這有助於我們撰寫版本說明。同時也作為變更的簡要摘要。\n- 測試計劃。這可能是 pull request 中最重要的部分。測試計劃應是一個可重現的逐步指南，以便審查者能夠驗證您的變更是否按預期運作。對於使用者可見的變更，附上螢幕截圖或影片也是個好主意。"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "Any pull request may require a deeper understanding of some area of React Native that you may not be familiar with. Even if you don't feel like you are the right person to review a pull request, you may still help by adding labels or asking the author for more information.",
      "source_content_hash": "f2aa9511da6ed0220ce55d435d7d984a93078ba7f6ccba66256979d40f12668a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "任何 pull request 都可能需要對 React Native 的某些領域有更深入的理解，而您可能對此並不熟悉。即使您覺得自己不是審查某個 pull request 的合適人選，您仍然可以通過添加標籤或向作者請求更多信息來提供幫助。"
      }
    },
    {
      "segment_id": "e14c9928",
      "source_content": "## Reviewing PRs",
      "source_content_hash": "2f7b174830cc4a4743847e66d4c41e36e5e0fb0904884087aa49cbd2db389dba",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 審查 PRs"
      }
    },
    {
      "segment_id": "42ad8e83",
      "source_content": "Pull Requests need to be reviewed and approved using GitHub's review feature before they can be merged. While anyone has the ability to review and approve a pull request, we typically only consider a pull request ready to be merged when the approval comes from one of the [contributors](https://github.com/facebook/react-native/blob/main/ECOSYSTEM.md).",
      "source_content_hash": "13b043555cde9f6d522ba15482ec7dd848387bb28cfb653e950aaf19cb74b409",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Pull Requests 需要使用 GitHub 的審查功能進行審查和批准後才能合併。雖然任何人都可以審查和批准 pull request，但我們通常只有在審查來自[貢獻者](https://github.com/facebook/react-native/blob/main/ECOSYSTEM.md)之一時，才會認為 pull request 已準備好合併。"
      }
    },
    {
      "segment_id": "29ee8c7a",
      "source_content": "<!-- alex ignore clearly -->",
      "source_content_hash": "a2dc06c339b213ab03653112e7f575dcd4a7ed8bb8bcee90308deddfa7e0e566",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_29ee8c7a"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "So you've found a pull request that you feel confident reviewing. Please make use of the GitHub Review feature, and clearly and politely communicate any suggested changes.",
      "source_content_hash": "0ac9e753dda959c7f6f44d1f76620dffc08967cd7c7089f0bdfb5cbca1a69ae7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "假設您找到了一個您有信心審查的 pull request。請使用 GitHub 的審查功能，並清晰且禮貌地溝通任何建議的變更。"
      }
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "Consider starting with pull requests that have been flagged as lacking a changelog or test plan.",
      "source_content_hash": "7cde65fcf48fb97fbfb97db1e439bdc5349c3099acf459248217b40ae22fc320",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "可以考慮從那些被標記為缺少變更日誌或測試計劃的 pull request 開始。"
      }
    },
    {
      "segment_id": "44d89370",
      "source_content": "- [PRs that appear to lack a changelog](https://github.com/facebook/react-native/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+label%3A%22Missing+Changelog%22+) - take a look and see if you can add the changelog yourself by editing the PR. After doing so, remove the \"Missing Changelog\" label.\n- [PRs that are missing a test plan](https://github.com/facebook/react-native/pulls?q=is%3Apr+label%3A%22Missing+Test+Plan%22+is%3Aclosed) - open the pull request and look for a test plan. If the test plan looks sufficient, remove the \"Missing Test Plan\"\" label. If there is no test plan, or it looks incomplete, add a comment politely asking the author to consider adding a test plan.",
      "source_content_hash": "cb8938b98ae80768081d02017d59777bf65c0e1cb78661e996de023ba17cc8a9",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- [缺少變更日誌的 PRs](https://github.com/facebook/react-native/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+label%3A%22Missing+Changelog%22+) - 查看並嘗試通過編輯 PR 來添加變更日誌。完成後，移除「Missing Changelog」標籤。\n- [缺少測試計劃的 PRs](https://github.com/facebook/react-native/pulls?q=is%3Apr+label%3A%22Missing+Test+Plan%22+is%3Aclosed) - 打開 pull request 並尋找測試計劃。如果測試計劃看起來足夠，移除「Missing Test Plan」標籤。如果沒有測試計劃，或者看起來不完整，添加一條評論禮貌地請求作者考慮添加測試計劃。"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "A pull request must pass all the tests before it can be merged. They run on every commit on `main` and pull request. A quick way to help us get pull requests ready for review is to [search for pull requests that are failing the pre-commit tests](https://github.com/facebook/react-native/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+label%3A%22CLA+Signed%22+status%3Afailure+) and determine if they need to be revised. The failing test is usually listed near the bottom of the thread, under \"Some checks were not successful.\"",
      "source_content_hash": "88ef5d59ddf935a4fb8d5538100a0e5e654124ce86d27b51458a9b1b9dbec7ef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "一個 pull request 必須通過所有測試才能合併。這些測試會在每次提交到 `main` 分支和 pull request 時運行。幫助我們準備好 pull request 進行審查的一個快速方法是[搜尋那些未能通過預提交測試的 pull requests](https://github.com/facebook/react-native/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+label%3A%22CLA+Signed%22+status%3Afailure+)，並判斷是否需要進行修訂。失敗的測試通常會列在討論串的底部，標記為「Some checks were not successful」。"
      }
    },
    {
      "segment_id": "5da9e02b",
      "source_content": "- Take a quick glance at the [latest tests runs on main](https://circleci.com/gh/facebook/react-native/tree/main). Is `main` green? If so,\n  - Does it look like the failure may be related to the changes in this pull request? Ask the author to investigate.\n  - Even if `main` is currently green, consider the possibility that the commits in the pull requests may be based off a commit from a point in time when `main` was broken. If you believe this may be the case, ask the author to rebase their changes on top of `main` in order to pull in any fixes that may have landed after they started working on the pull request.\n- If `main` appears to be broken, look for any [issues labeled as \"CI Test Failure\"](https://github.com/facebook/react-native/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3A%22%E2%9D%8CCI+Test+Failure%22+).\n  - If you find an issue that seems related to the failure on `main`, go back to the pull request and thank the author for proposing these changes, and let them know that the test failure may be unrelated to their particular change (do not forget to link back to the CI Test Failure issue, as this will help the author know when they can try running tests again).\n  - If you cannot find an existing CI Test Failure issue that describes the problem you've observed on `main`, please submit a new issue and use the \"CI Test Failure\" label to let others know that `main` is broken (see [this issue](https://github.com/facebook/react-native/issues/23108) for an example).",
      "source_content_hash": "ef28a5fb25bf3fe2130247e2044992d787aebd9cebed745d297fa0644dcc6597",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- 快速查看 [main 分支的最新測試運行結果](https://circleci.com/gh/facebook/react-native/tree/main)。`main` 是否顯示為綠色（通過）？如果是：\n  - 測試失敗是否可能與此拉取請求中的變更有關？請要求作者進行調查。\n  - 即使 `main` 目前顯示為綠色，仍需考慮拉取請求中的提交可能是基於 `main` 分支發生故障時期的某個提交。若您認為可能存在此情況，請要求作者將其變更重新基於最新的 `main` 分支進行重訂（rebase），以納入後續可能已修復的內容。\n- 若 `main` 顯示為故障狀態，請查找 [標記為「CI Test Failure」的議題](https://github.com/facebook/react-native/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3A%22%E2%9D%8CCI+Test+Failure%22+)。\n  - 若找到與 `main` 故障相關的議題，請返回拉取請求並感謝作者提出變更，同時說明測試失敗可能與其特定變更無關（別忘了附上 CI Test Failure 議題連結，這將幫助作者了解何時可重新執行測試）。\n  - 若未找到描述 `main` 故障的現有 CI Test Failure 議題，請提交新議題並使用「CI Test Failure」標籤通知其他人 `main` 處於故障狀態（參考 [此議題](https://github.com/facebook/react-native/issues/23108) 範例）。"
      }
    },
    {
      "segment_id": "3b7478ea",
      "source_content": "## How we prioritize PRs",
      "source_content_hash": "74a3323a316aa7323a38d4e65c77953edc8fe961be52ff6a8ae052903c5dad70",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 我們如何排定拉取請求的優先級"
      }
    },
    {
      "segment_id": "c3a738de",
      "source_content": "Members of the React Native team at Meta aim to review pull requests quickly and most PRs will get a response within a week.",
      "source_content_hash": "b09c2b0e8269d383eab0de6e468e1e8a970a51f49b820285cd6fa6c20cf2dd25",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Meta 的 React Native 團隊成員致力於快速審查拉取請求，多數 PR 會在一週內獲得回覆。"
      }
    },
    {
      "segment_id": "9f9e64f5",
      "source_content": "## How does a PR get merged?",
      "source_content_hash": "b9922218f22f18d061d56b683fa2af40cd5ba5d6aac40ed60e6822315f10a0c3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 拉取請求如何被合併？"
      }
    },
    {
      "segment_id": "1042b50d",
      "source_content": "The React Native GitHub repository is actually a mirror of a subdirectory from one of Meta's monorepos. Pull requests are therefore not merged in the traditional sense. Instead, they need to be imported into Meta's internal code review system as a [\"diff\"](https://www.phacility.com/phabricator/differential/).",
      "source_content_hash": "4031624c3b5ec560a78259cf0b63c02024182dda4cff1dc08551441d8f4dcb73",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "React Native 的 GitHub 倉庫實際上是 Meta 單體倉庫（monorepo）中某個子目錄的鏡像。因此，拉取請求不會以傳統方式合併，而是需要透過 [「diff」](https://www.phacility.com/phabricator/differential/) 形式導入 Meta 內部的程式碼審查系統。"
      }
    },
    {
      "segment_id": "aa1e7006",
      "source_content": "Once imported, the changes will go through a suite of tests. Some of these tests are land-blocking, meaning they need to succeed before the contents of the diff can be merged. Meta always runs React Native from `main` and some changes may require a Facebook employee to attach internal changes to your pull request before it can be merged. For example, if you rename a module name, all Facebook internal callsites have to be updated in the same change in order to merge it. If the diff lands successfully, the changes will eventually get synced back to GitHub by [ShipIt](https://github.com/facebook/fbshipit) as a single commit.",
      "source_content_hash": "59087fba0a2eabc8cf118294403640c486afe7b9519587d91101bf585f4d2b6a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "導入後，變更將通過一系列測試。部分測試為合併阻斷項（land-blocking），意味著必須通過這些測試才能合併 diff 內容。Meta 始終從 `main` 分支運行 React Native，某些變更可能需要 Facebook 員工在合併前為您的拉取請求附加內部變更。例如，若您重新命名模組名稱，必須在同一變更中更新 Facebook 內部所有呼叫點才能合併。若 diff 成功落地，變更最終將由 [ShipIt](https://github.com/facebook/fbshipit) 以單一提交形式同步回 GitHub。"
      }
    },
    {
      "segment_id": "13d9cd70",
      "source_content": "Meta employees are using a custom browser extension for GitHub that can import a pull request in one of two ways: the pull request can be \"landed to fbsource\", meaning it will be imported and the resulting diff will be approved automatically, and barring any failures, the changes will eventually sync back to `main`. A pull request may also be \"imported to Phabricator\", meaning the changes will be copied to an internal diff that will require further review and approval before it can land.",
      "source_content_hash": "0c1e105cdf636e1f1864daad74bbcbef32bdfc68d6b7d5da011dc8cfed8cc7e8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Meta 員工使用 GitHub 的客製化瀏覽器擴充功能，能以兩種方式導入拉取請求：可「落地至 fbsource」（landed to fbsource），表示將自動導入並核准產生的 diff，若無失敗則變更最終會同步回 `main`；亦可「導入至 Phabricator」（imported to Phabricator），表示變更將複製到內部 diff，需進一步審查核准後才能落地。"
      }
    },
    {
      "segment_id": "6127963f",
      "source_content": "<figure>\n  <img src=\"/img/importing-pull-requests.png\" />\n  <figcaption>Screenshot of the custom browser extension. The button \"Import to fbsource\" is used to import a Pull Request internally.</figcaption>\n</figure>",
      "source_content_hash": "fdfd3b5fb69ad0d413ea03576189fe31dd9618344a05b05db0d6cc6585f43a35",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "60410af6",
      "source_content": "## Bots",
      "source_content_hash": "44fba88dd84ad09f82d2faaefcc888cd5db412cf511afea599a4b9997cbc9ae5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 機器人"
      }
    },
    {
      "segment_id": "b9aaa519",
      "source_content": "As you review and work on pull requests, you might encounter comments left by a handful of GitHub bot accounts. These bots have been set up to aid in the pull request review process. See the [Bots Reference](/contributing/bots-reference) to learn more.",
      "source_content_hash": "cb431f09843762c27a599b50c0276c4187d92b83690c652025908ad92b1b5754",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "審查與處理拉取請求時，您可能會遇到幾個 GitHub 機器人帳號留下的評論。這些機器人旨在協助拉取請求審查流程，詳見 [機器人參考文件](/contributing/bots-reference)。"
      }
    },
    {
      "segment_id": "1a316f80",
      "source_content": "## Pull Request Labels",
      "source_content_hash": "3dfb243335e1f19f96639a96973a7ecca240de04d321f341ce837943f9ab70a7",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 拉取請求標籤"
      }
    },
    {
      "segment_id": "a0e887c2",
      "source_content": "- `Merged`: Applied to a closed PR to indicate that its changes have been incorporated into the core repository. This label is necessary because pull requests are not merged directly on GitHub. Instead, a patch with the PR's changes is imported and queued up for code review. Once approved, the result of applying those changes on top of Meta's internal monorepository gets synced out to GitHub as a new commit. GitHub does not attribute that commit back to the original PR, hence the need for a label that communicates the PR's true status.\n- `Blocked on FB`: The PR has been imported, but the changes have not yet been applied.",
      "source_content_hash": "0e716891cdc60a113c4a68455871dc78fd29ba27da4aaad60d8fb3e8cf95a073",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-hant": "- `Merged`：標記於已關閉的 PR，表示其變更已納入核心倉庫。此標籤必要是因為拉取請求不會直接在 GitHub 上合併，而是將 PR 變更以補丁形式導入並排入程式碼審查佇列。核准後，將這些變更應用於 Meta 內部單體倉庫的結果會以新提交同步至 GitHub。GitHub 不會將該提交歸因於原始 PR，因此需要此標籤傳達 PR 真實狀態。\n- `Blocked on FB`：PR 已導入，但變更尚未應用。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs-contributing/current/managing-pull-requests.md",
  "last_updated_timestamp": "2025-06-19T15:33:15.474713+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "5ce0fcc2dce33abb83f9439350a31e471b8167306b59111837d90ced5f320036"
  }
}